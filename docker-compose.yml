version: '3.8'

services:
  flashbot:
    build: .
    image: limitlessflashbot:latest
    container_name: limitlessflashbot
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      - SOLANA_RPC_URL=${SOLANA_RPC_URL:-https://api.mainnet-beta.solana.com}
      - QUICKNODE_URL=${QUICKNODE_URL}
      - WALLET_PRIVATE_KEY=${WALLET_PRIVATE_KEY}
      - REDIS_HOST=redis
      - DATABASE_URL=postgresql://flashbot:${POSTGRES_PASSWORD:-password}@postgres:5432/flashbot
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - DEPLOYMENT_ENV=production
      - PROMETHEUS_PORT=8000
    volumes:
      - ./logs:/app/logs
      - ./off-chain/models:/app/models
    depends_on:
      - redis
      - postgres
    networks:
      - flashbot-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  redis:
    image: redis:7-alpine
    container_name: flashbot-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - flashbot-network
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  postgres:
    image: postgres:15-alpine
    container_name: flashbot-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_DB=flashbot
      - POSTGRES_USER=flashbot
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-password}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - flashbot-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U flashbot -d flashbot"]
      interval: 30s
      timeout: 10s
      retries: 3

  prometheus:
    image: prom/prometheus:latest
    container_name: flashbot-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    networks:
      - flashbot-network
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'

  grafana:
    image: grafana/grafana:latest
    container_name: flashbot-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards
    networks:
      - flashbot-network
    depends_on:
      - prometheus

  nginx:
    image: nginx:alpine
    container_name: flashbot-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    networks:
      - flashbot-network
    depends_on:
      - flashbot

volumes:
  redis_data:
    driver: local
  postgres_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  flashbot-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

